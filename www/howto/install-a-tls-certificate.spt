import random
import string

nav_title="Install a TLS Certificate"
[---]
pool = string.lowercase + string.digits
random_subdomain = ''.join([random.choice(pool) for i in range(8)])
[---] text/html

Our certificate vendor is [Let's Encrypt](https://letsencrypt.org/), and Heroku
has [wonderful
integration](https://devcenter.heroku.com/articles/automated-certificate-management)
to provide certificate renewal automatically. We're able to take advantage of
that for `gratipay.com` and `grtp.co`. For our domains hosted at MaxCDN, the
process is more manual, using the
[certbot](https://certbot.eff.org/docs/using.html#manual) command-line tool.


## `{assets,downloads}.gratipay.com`

Install `certbot` locally, then run it in the `certs` directory of an Inside
Gratipay repo checkout, with the provided [configuration
file](https://github.com/gratipay/inside.gratipay.com/tree/master/certs/conf/):

```
git clone git@github.com:gratipay/inside.gratipay.com.git
cd certs
certbot certonly -c assets.gratipay.com.ini
```

You'll have to agree to having your IP address publicly logged, and then you'll
be prompted to verify ownership of the domains via [`dns-01`
challenges](https://tools.ietf.org/html/draft-ietf-acme-acme-03#section-7.4)
(`http-01` isn't even possible with MaxCDN). Update the relevant DNS records in
DNSimple, and await verification.

You should end up with one cert to use for both domains. Login to
[MaxCDN](https://www.maxcdn.com/) (creds are in 1Password). Go to Account > SSL
and edit the one certificate you find there, pasting in values copied from the
files you find under `tmp/archive`:

- `cert1.pem` &rarr; SSL Certificate (Cert)
- `privkey1.pem` &rarr; SSL Key
- `fullchain.pem` &rarr; Certificate Authority (CA) Bundle

Once you're done, `rm -rf tmp` to clear out sensitive files from your laptop.
